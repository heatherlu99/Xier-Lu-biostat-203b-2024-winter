---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 23 @ 11:59PM"
author: "Xier Lu UID:206331941"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
execute:
  eval: ture
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup}
library(arrow)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
```

Display your machine memory.
```{r}
#  eval: ture
memuse::Sys.meminfo()

```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://mimic.mit.edu/docs/iv/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2024winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10013310 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.
```{bash}
ln -s ~/mimic/hosp/labevents.parquet ~/desktop/203hw/hw3/labevents_pq
```

```{r}
library(ggplot2)
library(dplyr)
library(arrow)

# read the data
patients <- read_csv("~/mimic/hosp/patients.csv.gz")
admissions <- read_csv("~/mimic/hosp/admissions.csv.gz")
transfers <- read_csv("~/mimic/hosp/transfers.csv.gz")
labevents <- arrow::read_parquet("/Users/luxier/Desktop/203hw/hw3/labevents_pq/part-0.parquet")
procedures_icd <- read_csv("~/mimic/hosp/procedures_icd.csv.gz")
diagnoses_icd <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz")
d_icd_procedures <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
d_icd_diagnoses <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")

patient_filter <- filter(patients, subject_id == 10013310)
admissions_filter <- filter(admissions, subject_id == 10013310)
transfers_filter <- filter(transfers, subject_id == 10013310)
labevents_filter <- filter(labevents, subject_id == 10013310)
procedures_filter <- filter(procedures_icd, subject_id == 10013310)
diagnoses_filter <- filter(diagnoses_icd, subject_id == 10013310)

  
combined_data <- patient_filter %>%
  left_join(admissions_filter, by = "subject_id") %>%
  left_join(transfers_filter, by = "subject_id") %>%
  left_join(labevents_filter, by = "subject_id") %>%
  left_join(procedures_filter, by = "subject_id") %>%
  left_join(diagnoses_filter, by = "subject_id")

procedure_names <- left_join(procedures_icd, d_icd_procedures, by = "icd_code")
top_diagnoses <- diagnoses_icd %>%
  left_join(d_icd_diagnoses, by = "icd_code") %>%
  group_by(subject_id, hadm_id) %>%
  arrange(seq_num) %>%
  slice_head(n = 3) %>%
  summarise(subtitle = paste(long_title, collapse = "; ")) %>%
  ungroup()

combined_data <- left_join(combined_data, top_diagnoses, by = c("subject_id"))

patient_id <- unique(combined_data$subject_id)
subtitle <- unique(combined_data$subtitle)

ggplot(combined_data, aes(x = calendar_time, y = event_type)) + 
  geom_segment(aes(color = care_unit, size = is_icu_ccu), show.legend = FALSE) +  
  geom_point(data = combined_data %>% filter(event_type == "Lab"), aes(x = calendar_time), shape = 4) +  
  geom_point(data = combined_data %>% filter(event_type == "Procedure"), aes(x = calendar_time, shape = procedure_type)) +  
  labs(
    title = paste("Patient", patient_id, "ADT History"),
    subtitle = subtitle,
    x = "Calendar Time",
    y = "Event Type"
  ) +
  scale_shape_manual(values = c("Central venous catheter placement" = 16, "Other incision of brain" = 17, "Spinal tap" = 18)) + 
  theme_minimal()


```

### Q1.2 ICU stays

ICU stays are a subset of ADT history. We will visualize the vitals of a patient during ICU stays. 

This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

Do a similar visualization for the patient `10013310`.
```{r}
library(ggplot2)
library(dplyr)
library(readr)
icustays <- read_csv("~/mimic/icu/icustays.csv.gz")
vitalsign <- read_csv("~/mimic/icu/chartevents.csv.gz")

vitalsign_filtered <- filter(vitalsign, subject_id == 10013310)
icustays_filtered <- filter(icustays, subject_id == 10013310)
combined_data2 <- inner_join(vitalsign_filtered, icustays_filtered, by = c("subject_id", "stay_id"))
combined_data2$itemid <- as.factor(combined_data2$itemid)
combined_data2$charttime <- as.POSIXct(combined_data2$charttime, format = "%Y-%m-%d %H:%M:%S")

vital_colors <- c("220045" = "red", "220210" = "green", "220277" = "blue", "224639" = "purple")
vital_names <- setNames(c("Heart Rate", "Blood Pressure", "Respiratory Rate", "Temperature"), c("220045", "220210", "220277", "224639"))

ggplot(combined_data2, aes(x = charttime, y = valuenum, color = itemid)) + 
  geom_line() +
  facet_grid(stay_id ~ .) + 
  scale_color_manual(values = vital_colors, labels = vital_names) +
  labs(
    title = "Patient 10013310 ICU stays - Vitals",
    x = "Calendar Time",
    y = "Vital Value",
    color = "Vital Type"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`.   
**Answer：**
```{r}
library(dplyr)
library(readr)
library(ggplot2)

icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz")
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs.   
**Answer：**
```{r}
library(dplyr)
library(readr)
library(ggplot2)

number_unique_subjects <- icustays_tble %>%
  summarize(number_of_unique_subjects = n_distinct(subject_id))
icu_stays_per_subject <- icustays_tble %>%
  group_by(subject_id) %>%
  summarize(number_of_icu_stays = n()) %>%
  ungroup()

ggplot(icu_stays_per_subject, aes(x = number_of_icu_stays)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(
    title = "Distribution of ICU Stays per Subject",
    x = "Number of ICU Stays",
    y = "Frequency"
  ) +
  theme_minimal()

ggplot(icu_stays_per_subject, aes(x = factor(number_of_icu_stays))) +
  geom_bar(binwidth = 1, fill = "blue", color = "black") +
  labs(
    title = "Number of ICU Stays per Subject",
    x = "Number of ICU Stays",
    y = "Count of Subjects"
  ) +
  theme_minimal()
```

## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.
**Answer：**
```{r}
library(dplyr)
library(readr)
library(ggplot2)

admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz")
```

### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patient’s age at their first admission has been fixed to 300.

**Answer：**
```{r}
library(dplyr)
library(readr)
library(ggplot2)

admissions_per_patient <- admissions_tble %>%
  group_by(subject_id) %>%
  summarize(number_of_admissions = n()) %>%
  ungroup()

admissions_tble <- admissions_tble %>%
  mutate(admittime = as.POSIXct(admittime, format = "%Y-%m-%d %H:%M:%S"),
         dischtime = as.POSIXct(dischtime, format = "%Y-%m-%d %H:%M:%S"))

#number of admissions per patient
ggplot(admissions_per_patient, aes(x = number_of_admissions)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(
    title = "Distribution of Admissions per Patient",
    x = "Number of Admissions",
    y = "Frequency"
  ) +
  theme_minimal()

#admission hour
admissions_tble <- admissions_tble %>%
  mutate(admittime_hour = hour(admittime))

admission_hour <- admissions_tble %>%
  summarize(min_admission_hour = min(admittime_hour), max_admission_hour = max(admittime_hour))

ggplot(admissions_tble, aes(x = admittime_hour)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Distribution of Admission Hours", x = "Hour of Admission", y = "Count")

#admission minute
admissions_tble <- admissions_tble %>%
  mutate(admittime_minute = minute(admittime))

ggplot(admissions_tble, aes(x = admittime_minute)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(
    title = "Distribution of Admission Minute",
    x = "Admission Minute",
    y = "Frequency"
  ) +
  theme_minimal()

#length of hospital stay
admissions_tble <- admissions_tble %>%
  mutate(
    length_of_stay = as.numeric(dischtime - admittime, units = "days")
  )

ggplot(admissions_tble, aes(x = length_of_stay)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(
    title = "Distribution of Length of Stay",
    x = "Length of Stay",
    y = "Frequency"
  ) +
  theme_minimal()
```

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.  
**Answer：**
```{r}
library(dplyr)
library(readr)
library(ggplot2)

patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz")
```
### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

**Answer：**
```{r}
library(dplyr)
library(readr)
library(ggplot2)

#gender
gender_distribution <- patients_tble %>%
  count(gender) %>%
  mutate(percentage = n / sum(n) * 100)

ggplot(gender_distribution, aes(x = gender, y = percentage, fill = gender)) +
  geom_bar(stat = "identity") +
  labs(title = "Gender Distribution", x = "Gender", y = "Percentage (%)") +
  theme_minimal()

#anchor_age
age_distribution <- patients_tble %>%
  count(anchor_age) %>%
  mutate(percentage1 = n / sum(n) * 100)

ggplot(age_distribution, aes(x = anchor_age, y = percentage1)) +
  geom_bar(stat = "identity", fill = "blue", color = "black") +
  labs(
    title = "Distribution of Anchor Age",
    x = "Anchor Age",
    y = "Percentage (%)"
  ) +
  theme_minimal()

```

## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

```{bash}
ln -s ~/mimic/hosp/labevents.parquet ~/desktop/203hw/hw3/labevents_pq
```

```{r}
library(dplyr)
library(arrow)
library(readr)
library(tidyr)

labevents <- arrow::read_parquet("/Users/luxier/Desktop/203hw/hw3/labevents_pq/part-0.parquet")
d_labitems <- read_csv("~/mimic/hosp/d_labitems.csv.gz")
lab_item_ids <- c(50912, 50971, 50983, 50902, 50882, 51221, 51301, 50931)

labevents_filtered <- filter(labevents, itemid %in% lab_item_ids)
labevents_before_icu <- labevents_filtered %>%
  inner_join(icustays_tble, by = "subject_id") %>%
  filter(storetime < intime)

labevents_last_measurement <- labevents_before_icu %>%
  group_by(subject_id, itemid) %>%
  slice_max(order_by = storetime, n = 1, with_ties = FALSE) %>%
  ungroup()

labevents_tble <- labevents_last_measurement %>%
  pivot_wider(
    id_cols = c(subject_id, stay_id),
    names_from = itemid,
    values_from = valuenum,  
    values_fill = list(valuenum = NA)  
  ) %>%
  rename(
    creatinine = `50912`,
    potassium = `50971`,
    sodium = `50983`,
    chloride = `50902`,
    bicarbonate = `50882`,
    hematocrit = `51221`,
    white_blood_cell_count = `51301`,
    glucose = `50931`
  )

labevents_tble
```

## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patient’s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.
**Amswer:**
```{r}
library(dplyr)
library(arrow)
library(readr)
library(tidyr)

chartevents <- read_csv("~/mimic/icu/chartevents.csv.gz")
d_items <- read_csv("~/mimic/icu/d_items.csv.gz")

items_filter <- filter(d_items, itemid %in% c(220045, 220179, 220180, 223761, 220210))
chartevents_filtered <- filter(chartevents, itemid %in% items_filter$itemid)

subset_chartevents <- chartevents_filtered %>%
  inner_join(icustays_tble, by = "subject_id") %>%
  group_by(subject_id, stay_id) %>%
  arrange(charttime) %>%
  filter(row_number() == 1) %>%
  ungroup()


  
chartevents_tble <- subset_chartevents %>%
  pivot_wider(
    names_from = itemid, 
    values_from = valuenum,
    names_prefix = "vital_"
  )

chartevents_tble


```

## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)

## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the average vital measurements within the first hour of ICU stay

- Length of ICU stay `los` vs first ICU unit
